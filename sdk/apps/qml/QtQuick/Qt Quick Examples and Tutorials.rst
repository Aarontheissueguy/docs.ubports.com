

This page lists the Qt QML and `Qt
Quick </sdk/apps/qml/QtQuick/qtquick-index/>`__ examples, however, many
other Qt modules contain examples related to their QML API.

.. rubric:: Running the Examples and Demos
   :name: running-the-examples-and-demos

The examples are packaged with the Qt installers and are accessed
through Qt Creator. For more information about running examples in Qt
Creator, visit the Building and Running an Example page.

Open and run examples within Qt Creator's **Welcome** mode. Most of the
examples run on various platforms and to search for platform-specific
examples, type the platform name (or any keywords) in the search field.
For example, typing ``mobile`` in the search field lists the examples
that are fully compatible with the mobile platforms.

To view other examples and tutorials, visit the Qt Examples And
Tutorials page.

.. rubric:: Qt Quick Demos
   :name: qt-quick-demos

Here is a list of fully-functional demo applications. They are full
applications that show how a deployable Qt application is built and
structured. Many of the demos are deployable to mobile and desktop
platforms.

+--------------------------------------+--------------------------------------+
| `Qt Quick Demo -                     | A QML app designed for portrait      |
| Calqlatr </sdk/apps/qml/QtQuick/demo | devices that uses custom components, |
| s-calqlatr/>`__                      | animated with AnimationController,   |
|                                      | and JavaScript for the application   |
|                                      | logic.                               |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo -                     | A QML clock application that         |
| Clocks </sdk/apps/qml/QtQuick/demos- | demonstrates using a ListView type   |
| clocks/>`__                          | to display data generated by a       |
|                                      | ListModel and a SpringAnimation type |
|                                      | to animate images.                   |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo - Maroon in           | A Qt Quick game for touch devices    |
| Trouble </sdk/apps/qml/QtQuick/demos | that uses SpriteSequence,            |
| -maroon/>`__                         | ParticleSystem, Emitter, and Wander  |
|                                      | types to animate objects and the     |
|                                      | SoundEffect type to play sound       |
|                                      | effects.                             |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo - Photo               | A QML app for touch devices that     |
| Surface </sdk/apps/qml/QtQuick/demos | uses a Repeater with a               |
| -photosurface/>`__                   | FolderListModel to access content in |
|                                      | a folder, and a PinchArea that       |
|                                      | contains a MouseArea to handle pinch |
|                                      | gestures on the fetched content.     |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo - Photo               | A QML photo viewer that that uses    |
| Viewer </sdk/apps/qml/QtQuick/demos- | XmlListModel and XmlRole to download |
| photoviewer/>`__                     | Flickr feeds, and Package to display |
|                                      | the photos in different views.       |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo - RSS                 | A QML RSS news reader that uses      |
| News </sdk/apps/qml/QtQuick/demos-rs | XmlListModel and XmlRole to download |
| snews/>`__                           | XML data, ListModel and ListElement  |
|                                      | to create a category list, and       |
|                                      | ListView to display the data.        |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo - Same                | A QML implementation of the popular  |
| Game </sdk/apps/qml/QtQuick/demos-sa | puzzle game by Kuniaki Moribe.       |
| megame/>`__                          |                                      |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo -                     | A configurable stock chart for the   |
| StocQt </sdk/apps/qml/QtQuick/demos- | NASDAQ-100.                          |
| stocqt/>`__                          |                                      |
+--------------------------------------+--------------------------------------+
| `Qt Quick Demo - Tweet               | A Twitter search client with 3D      |
| Search </sdk/apps/qml/QtQuick/demos- | effects.                             |
| tweetsearch/>`__                     |                                      |
+--------------------------------------+--------------------------------------+

.. rubric:: Developing Qt Quick Applications
   :name: developing-qt-quick-applications

The following pages show how to develop Qt applications using Qt Creator
and Qt Quick. The pages demonstrate various steps such as use cases and
introductory material. For more information about Qt Quick Applications
and related modules, visit the QML Applications page.

**Development Environment**

-  Creating Qt Quick Projects
-  Using Qt Quick Designer
-  Creating Components
-  Creating Screens
-  Exporting Designs from Graphics Software
-  Using QML Modules with Plugins

**Beginning with QML and Qt Quick**

-  First Steps with QML
-  Qt Quick Text Editor
-  `SameGame </sdk/apps/qml/QtQuick/qml-advtutorial/>`__

**Use Cases**

-  Visual types in QML
-  Responding to User Input in QML
-  Animations in QML
-  Displaying Text in QML
-  Layouts in QML
-  Style and Theme Support
-  Integrating JavaScript in QML

.. rubric:: Extending QML
   :name: extending-qml

The following tutorials show how a QML-based application can be combined
with C++ code using the Qt QML module. For information about extending
QML, visit the Integrating QML and C++ page.

.. rubric:: Examples
   :name: examples

Examples are small applications which show how to implement various Qt
Quick features. The examples run on various platforms and are opened
from within Qt Creator.

**QML Types and Controls**

-  Controls Gallery
-  Dialog Examples
-  Calendar Example
-  TableView
-  `Text and Fonts </sdk/apps/qml/QtQuick/text/>`__
-  `Custom Toggle
   Switch </sdk/apps/qml/QtQuick/qmlexampletoggleswitch/>`__

**Layouts and Views**

-  Basic Layouts
-  `Positioners </sdk/apps/qml/QtQuick/positioners/>`__
-  `Views </sdk/apps/qml/QtQuick/views/>`__
-  `Windows and Screen </sdk/apps/qml/QtQuick/window/>`__
-  `Right-to-Left and Text
   Layout </sdk/apps/qml/QtQuick/righttoleft/>`__

**Image and Graphics**

-  `Image Elements </sdk/apps/qml/QtQuick/imageelements/>`__
-  `Animation </sdk/apps/qml/QtQuick/animation/>`__
-  `Canvas API </sdk/apps/qml/QtQuick/canvas/>`__
-  `Shader Effects </sdk/apps/qml/QtQuick/shadereffects/>`__

**Keyboard, Focus, and Touch**

-  `Key Interaction </sdk/apps/qml/QtQuick/keyinteraction/>`__
-  `MouseArea </sdk/apps/qml/QtQuick/mousearea/>`__
-  Touch Gallery

**System and Events**

-  `Threading </sdk/apps/qml/QtQuick/threading/>`__
-  `Accessibility </sdk/apps/qml/QtQuick/quick-accessibility/>`__
-  `External Drag and
   Drop </sdk/apps/qml/QtQuick/externaldraganddrop/>`__
-  `Drag and Drop </sdk/apps/qml/QtQuick/draganddrop/>`__

**Scene Graph**

-  `OpenGL Under
   QML </sdk/apps/qml/QtQuick/scenegraph-openglunderqml/>`__
-  `Painted Item </sdk/apps/qml/QtQuick/customitems-painteditem/>`__
-  `Custom
   Geometry </sdk/apps/qml/QtQuick/scenegraph-customgeometry/>`__
-  `Graph </sdk/apps/qml/QtQuick/scenegraph-graph/>`__
-  `Simple
   Material </sdk/apps/qml/QtQuick/scenegraph-simplematerial/>`__
-  `Rendering
   FBOs </sdk/apps/qml/QtQuick/scenegraph-textureinsgnode/>`__
-  `Rendering FBOs in a
   thread </sdk/apps/qml/QtQuick/scenegraph-textureinthread/>`__

